{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mangesh\\\\Desktop\\\\Splitwise_app-master\\\\frontend\\\\src\\\\user\\\\Calender.js\";\nimport React, { Component } from \"react\";\nimport { Inject, ScheduleComponent, Day, Week, Month, WorkWeek, Agenda, ResourceDirective, ResourcesDirective } from \"@syncfusion/ej2-react-schedule\";\n\nclass Calender extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      members: [],\n      resourceDataSource: []\n    };\n  }\n\n  async componentDidMount() {\n    await fetch(\"http://localhost:3000/members\").then(async res => await res.json()).then(json => {\n      this.setState({\n        isLoaded: true,\n        members: json\n      });\n    });\n  }\n\n  async componentDidMount() {\n    await fetch(\"http://localhost:3000/Object\").then(async res => await res.json()).then(json => {\n      this.setState({\n        isLoaded: true,\n        resourceDataSource: json\n      });\n    });\n  } //localData = members;\n\n\n  render() {\n    return (// <ScheduleComponent>\n      //   <Inject services={[Day, Week, Month, Agenda]} />\n      // </ScheduleComponent>\n      React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, resourceDataSource) // <ScheduleComponent\n      //   height=\"550px\"\n      //   selectedDate={new Date(2020, 4, 8)}\n      //   eventSettings={{ dataSource: this.members }}\n      // >\n      //   <Inject services={[Day, Week, Month, Agenda]} />\n      //   <ResourcesDirective>\n      //     <ResourceDirective\n      //       field=\"ResourceID\"\n      //       tittle=\"Resource Name\"\n      //       textField=\"Name\"\n      //       idField=\"Id\"\n      //       colorField=\"Color\"\n      //     ></ResourceDirective>\n      //   </ResourcesDirective>\n      // </ScheduleComponent>\n\n    );\n  }\n\n}\n\nexport default Calender;","map":{"version":3,"sources":["C:/Users/mangesh/Desktop/Splitwise_app-master/frontend/src/user/Calender.js"],"names":["React","Component","Inject","ScheduleComponent","Day","Week","Month","WorkWeek","Agenda","ResourceDirective","ResourcesDirective","Calender","constructor","props","state","members","resourceDataSource","componentDidMount","fetch","then","res","json","setState","isLoaded","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,MADF,EAEEC,iBAFF,EAGEC,GAHF,EAIEC,IAJF,EAKEC,KALF,EAMEC,QANF,EAOEC,MAPF,EAQEC,iBARF,EASEC,kBATF,QAUO,gCAVP;;AAYA,MAAMC,QAAN,SAAuBX,KAAK,CAACC,SAA7B,CAAuC;AACrCW,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,EADE;AAEXC,MAAAA,kBAAkB,EAAE;AAFT,KAAb;AAID;;AAED,QAAMC,iBAAN,GAA0B;AACxB,UAAMC,KAAK,CAAC,+BAAD,CAAL,CACHC,IADG,CACE,MAAOC,GAAP,IAAe,MAAMA,GAAG,CAACC,IAAJ,EADvB,EAEHF,IAFG,CAEGE,IAAD,IAAU;AACd,WAAKC,QAAL,CAAc;AACZC,QAAAA,QAAQ,EAAE,IADE;AAEZR,QAAAA,OAAO,EAAEM;AAFG,OAAd;AAID,KAPG,CAAN;AAQD;;AACD,QAAMJ,iBAAN,GAA0B;AACxB,UAAMC,KAAK,CAAC,8BAAD,CAAL,CACHC,IADG,CACE,MAAOC,GAAP,IAAe,MAAMA,GAAG,CAACC,IAAJ,EADvB,EAEHF,IAFG,CAEGE,IAAD,IAAU;AACd,WAAKC,QAAL,CAAc;AACZC,QAAAA,QAAQ,EAAE,IADE;AAEZP,QAAAA,kBAAkB,EAAEK;AAFR,OAAd;AAID,KAPG,CAAN;AAQD,GA5BoC,CA8BrC;;;AAEAG,EAAAA,MAAM,GAAG;AACP,WACE;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAMR,kBAAN,CAJF,CAKE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AApBF;AAsBD;;AAvDoC;;AA0DvC,eAAeL,QAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Inject,\r\n  ScheduleComponent,\r\n  Day,\r\n  Week,\r\n  Month,\r\n  WorkWeek,\r\n  Agenda,\r\n  ResourceDirective,\r\n  ResourcesDirective,\r\n} from \"@syncfusion/ej2-react-schedule\";\r\n\r\nclass Calender extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      members: [],\r\n      resourceDataSource: [],\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await fetch(\"http://localhost:3000/members\")\r\n      .then(async (res) => await res.json())\r\n      .then((json) => {\r\n        this.setState({\r\n          isLoaded: true,\r\n          members: json,\r\n        });\r\n      });\r\n  }\r\n  async componentDidMount() {\r\n    await fetch(\"http://localhost:3000/Object\")\r\n      .then(async (res) => await res.json())\r\n      .then((json) => {\r\n        this.setState({\r\n          isLoaded: true,\r\n          resourceDataSource: json,\r\n        });\r\n      });\r\n  }\r\n\r\n  //localData = members;\r\n\r\n  render() {\r\n    return (\r\n      // <ScheduleComponent>\r\n      //   <Inject services={[Day, Week, Month, Agenda]} />\r\n      // </ScheduleComponent>\r\n      <div>{resourceDataSource}</div>\r\n      // <ScheduleComponent\r\n      //   height=\"550px\"\r\n      //   selectedDate={new Date(2020, 4, 8)}\r\n      //   eventSettings={{ dataSource: this.members }}\r\n      // >\r\n      //   <Inject services={[Day, Week, Month, Agenda]} />\r\n      //   <ResourcesDirective>\r\n      //     <ResourceDirective\r\n      //       field=\"ResourceID\"\r\n      //       tittle=\"Resource Name\"\r\n      //       textField=\"Name\"\r\n      //       idField=\"Id\"\r\n      //       colorField=\"Color\"\r\n      //     ></ResourceDirective>\r\n      //   </ResourcesDirective>\r\n      // </ScheduleComponent>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Calender;\r\n"]},"metadata":{},"sourceType":"module"}